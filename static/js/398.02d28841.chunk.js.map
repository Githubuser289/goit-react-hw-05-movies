{"version":3,"file":"static/js/398.02d28841.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","components/Searchbar.styled.js","components/Searchbar.jsx","pages/Movies.jsx","services/TheMovieDBapi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = props => {\n  const location = useLocation();\n\n  return (\n    <nav>\n      <ul>\n        {props.data.map((movie, index) => {\n          return (\n            <li key={index}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\n// to adapt this function in order to get a gallery filled with movie posters\n// function renderMoviesList(list) {\n//   const markup = list\n//     .map(({ id, poster_path, title, genres, release_year, vote_average }) => {\n//       // adaug elemente in markup\n//       return `<div>\n//     <img id=\"${id}\" src=\"${poster_path}\" alt=\"movie poster\" loading=\"lazy\" />\n//             <p class=\"movie-title\">   ${title} </p>\n//             <p class=\"movie-short-descr\"> ${genres} | ${release_year} | <span>${vote_average}</span></p>\n//         </div>`;\n//     })\n//     .join('');\n//   const moviesDivElem = document.querySelector('.movies-div');\n//   moviesDivElem.innerHTML = markup;\n// }\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  background-color: #fff;\n  border-radius: 6px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const FormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: lightskyblue;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    color: black;\n  }\n`;\n\nexport const FormSpan = styled.span`\n  position: absolute;\n  width: 15px;\n  height: 15px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const FormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &.placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  FormButton,\n  FormInput,\n  FormSpan,\n  Header,\n  SearchForm,\n} from './Searchbar.styled';\n\nfunction Searchbar({ submitCallback }) {\n  return (\n    <Header>\n      <SearchForm onSubmit={submitCallback}>\n        <FormButton type=\"submit\">\n          <svg\n            stroke=\"currentColor\"\n            fill=\"currentColor\"\n            strokeWidth=\"1\"\n            viewBox=\"0 0 16 16\"\n            height=\"1em\"\n            width=\"1em\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"></path>\n          </svg>\n          <FormSpan>Search</FormSpan>\n        </FormButton>\n\n        <FormInput\n          type=\"text\"\n          name=\"searchInput\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter a word from a movie title\"\n        />\n      </SearchForm>\n    </Header>\n  );\n}\n\nSearchbar.propTypes = {\n  submitCallback: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { MoviesList } from 'components/MoviesList';\nimport Searchbar from 'components/Searchbar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesGenres, fetchSearchedMovies } from 'services/TheMovieDBapi';\nimport Loader from 'components/Loader/Loader';\n\nlet movieData = {\n  id: 0,\n  title: '',\n  original_title: '',\n  overview: '',\n  poster_path: '',\n  genres: '',\n  popularity: 0,\n  release_year: 0,\n  vote_average: 0,\n  vote_count: 0,\n};\nlet movieArray = [];\nlet listOfGenres,\n  counter = 0;\n\nconst Movies = () => {\n  const [flag, setFlag] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function renderSearchedMovies() {\n      setIsLoading(true);\n      const listOfGen = await fetchMoviesGenres();\n      listOfGenres = listOfGen.genres;\n      const data = await fetchSearchedMovies(query, 1);\n      // const spanElem = document.querySelector('.error-message');\n      // if (spanElem.innerHTML !== '') return;\n\n      //get the movie data and put them into movieData, and push them into movieArray\n      data.results.map(\n        ({\n          id,\n          title,\n          original_title,\n          overview,\n          poster_path,\n          genre_ids,\n          popularity,\n        }) => {\n          movieData = {\n            id,\n            title,\n            original_title,\n            overview,\n            popularity,\n          };\n          if (poster_path === null) {\n            movieData.poster_path =\n              'https://dummyimage.com/395x574/000/fff.jpg&amp;text=no+poster';\n          } else {\n            movieData.poster_path =\n              'https://www.themoviedb.org/t/p/w500' + poster_path;\n          }\n\n          // transform array \"genre_ids\" in string \"genres\", property of movieData\n          let genre = '';\n          for (let i = 0; i < genre_ids.length; i++) {\n            if (i > 0) {\n              genre += ', ';\n            }\n            let j = 0;\n            while (listOfGenres[j]['id'] !== genre_ids[i]) j++;\n            genre += listOfGenres[j].name;\n          }\n          movieData.genres = genre;\n          counter++;\n          if (counter <= 20) movieArray.push(movieData);\n          return movieData;\n        }\n      );\n      setFlag(true);\n    }\n    if (!query) return;\n    renderSearchedMovies();\n    setIsLoading(false);\n  }, [query]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    let txt = evt.target[1].value;\n    if (txt === '') return;\n    movieArray = [];\n    counter = 0;\n    document.getElementsByName('searchInput')[0].value = '';\n    setSearchParams({ query: txt });\n    setFlag(false);\n  };\n\n  return (\n    <main>\n      <Searchbar submitCallback={handleSubmit} />\n      <br />\n      {isLoading && <Loader />}\n      {movieArray.length === 0 && flag && (\n        <i>There are no movies whose title contains this word. </i>\n      )}\n      {flag && <MoviesList data={movieArray} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst TMDB_URL = `https://api.themoviedb.org/3/`,\n  API_KEY = `cfa02d8137a4395c6860edb4676198c3`,\n  PART1 = 'include_adult=false',\n  PART2 = 'language=en-US';\n\nasync function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}/credits?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMoviesGenres() {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/genre/movie/list?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchTrendingMovies(pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/trending/movie/day?api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    const moviesDivElem = document.querySelector('.movies-div');\n    moviesDivElem.innerHTML = '';\n    const btnsDivElem = document.querySelector('.buttons-div');\n    if (btnsDivElem !== null) btnsDivElem.remove();\n    window.scrollTo(0, 0);\n  }\n}\n\nasync function fetchSearchedMovies(searchQuery, pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    window.scrollTo(0, 0);\n  }\n}\n\nexport {\n  fetchMovieCredits,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchMoviesGenres,\n  fetchTrendingMovies,\n  fetchSearchedMovies,\n};\n"],"names":["MoviesList","props","location","useLocation","_jsx","children","data","map","movie","index","Link","to","concat","id","state","from","title","Header","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","SearchForm","_templateObject3","FormButton","_templateObject4","FormSpan","_templateObject5","FormInput","_templateObject6","listOfGenres","_ref","submitCallback","_jsxs","onSubmit","type","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","name","autoComplete","autoFocus","placeholder","movieData","original_title","overview","poster_path","genres","popularity","release_year","vote_average","vote_count","movieArray","counter","_useState","useState","_useState2","_slicedToArray","flag","setFlag","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","_renderSearchedMovies","_asyncToGenerator","_regeneratorRuntime","_callee","listOfGen","_context","prev","next","fetchMoviesGenres","sent","fetchSearchedMovies","results","genre_ids","genre","i","length","j","push","stop","apply","arguments","renderSearchedMovies","Searchbar","evt","preventDefault","txt","target","value","document","getElementsByName","Loader","TMDB_URL","API_KEY","PART1","PART2","fetchMovieCredits","_x","_fetchMovieCredits","movieId","response","axios","abrupt","t0","console","error","fetchMovieDetails","_x2","_fetchMovieDetails","_callee2","_context2","_fetchMoviesGenres","_callee3","_context3","fetchMovieReviews","_x3","_fetchMovieReviews","_callee4","_context4","fetchTrendingMovies","_x4","_fetchTrendingMovies","_callee5","pageNo","btnsDivElem","_context5","querySelector","innerHTML","remove","window","scrollTo","_x5","_x6","_fetchSearchedMovies","_callee6","searchQuery","_context6"],"sourceRoot":""}