{"version":3,"file":"static/js/387.db8d86c8.chunk.js","mappings":"wPAEaA,E,OAAUC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uV,kBCqDlC,EAjDa,WACX,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAxBAE,EAAAA,EAAAA,YAAU,WACqB,SAAAC,IAiB5B,OAjB4BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA7B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACqBC,EAAAA,EAAAA,IAAkBZ,GAAS,KAAD,EAAvCO,EAAIE,EAAAI,MACNL,GAAIM,EAAAA,EAAAA,GAAOP,EAAKQ,OACfC,KAAI,SAAAC,GAUP,OAT2B,OAAvBA,EAAMC,aAERD,EAAMC,aAEJ,uDAEFD,EAAMC,aACJ,mCAAqCD,EAAMC,aAExCD,CACT,IACAtB,EAAWa,GACXT,GAAa,GAAO,wBAAAU,EAAAU,OAAA,GAAAb,EAAA,MACrBc,MAAA,KAAAC,UAAA,CACIrB,IACLD,GAAa,GApBE,WACcI,EAAAiB,MAAC,KAADC,UAAA,CAoB7BC,GACF,GAAG,CAACtB,KAGFuB,EAAAA,EAAAA,MAACrC,EAAO,CAAAsC,SAAA,CACL1B,IAAa2B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBhC,EAAQiC,OAAS,EAChBjC,EAAQsB,KAAI,SAAAY,GAA4C,IAAzCV,EAAYU,EAAZV,aAAcW,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAEH,EAAFG,GAC5C,OACER,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKO,IAAKd,EAAce,IAAKJ,KAC7BJ,EAAAA,EAAAA,KAAA,QAAAD,SAAOK,KACPN,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYM,OAHPC,EAMd,KAEAN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2DAIX,C,uNCpDMU,EAAQ,gCACZC,EAAO,mCACPC,EAAQ,sBACRC,EAAQ,iBAAiB,SAEZzB,EAAiB0B,GAAA,OAAAC,EAAAnB,MAAC,KAADC,UAAA,UAAAkB,IAS/B,OAT+BA,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAC,EAAiCN,GAAO,IAAAwC,EAAA,OAAAnC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,WAAAQ,OAAU1C,EAAO,qBAAA0C,OAAoBP,EAAO,KAAAO,OAAIL,IAC3D,KAAD,EAFa,OAARG,EAAQ/B,EAAAI,KAAAJ,EAAAkC,OAAA,SAGPH,EAASjC,MAAI,OAAAE,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAEpBoC,QAAQC,MAAM,qCAAArC,EAAAmC,IAA8C,yBAAAnC,EAAAU,OAAA,GAAAb,EAAA,mBAE/Dc,MAAA,KAAAC,UAAA,UAEc0B,EAAiBC,GAAA,OAAAC,EAAA7B,MAAC,KAADC,UAAA,UAAA4B,IAU/B,OAV+BA,GAAA7C,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAA6C,EAAiClD,GAAO,IAAAwC,EAAA,OAAAnC,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,WAAAQ,OAAU1C,EAAO,aAAA0C,OAAYP,IACxC,KAAD,EAFa,OAARK,EAAQW,EAAAtC,KAAAsC,EAAAR,OAAA,SAGPH,EAASjC,MAAI,OAAA4C,EAAAzC,KAAA,EAAAyC,EAAAP,GAAAO,EAAA,SAEpBN,QAAQC,MAAM,qCAAAK,EAAAP,IACd,yBAAAO,EAAAhC,OAAA,GAAA+B,EAAA,mBAEH9B,MAAA,KAAAC,UAAA,UAEc+B,IAAiB,OAAAC,EAAAjC,MAAC,KAADC,UAAA,UAAAgC,IAU/B,OAV+BA,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAiD,IAAA,IAAAd,EAAA,OAAAnC,IAAAA,MAAA,SAAAkD,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA7C,KAAA,EAAA6C,EAAA5C,KAAA,EAE2B8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,8BAAAQ,OAA6BP,EAAO,KAAAO,OAAIL,IACnD,KAAD,EAFa,OAARG,EAAQe,EAAA1C,KAAA0C,EAAAZ,OAAA,SAGPH,EAASjC,MAAI,OAAAgD,EAAA7C,KAAA,EAAA6C,EAAAX,GAAAW,EAAA,SAEpBV,QAAQC,MAAM,qCAAAS,EAAAX,IACd,yBAAAW,EAAApC,OAAA,GAAAmC,EAAA,mBAEHlC,MAAA,KAAAC,UAAA,UAEcmC,EAAiBC,GAAA,OAAAC,EAAAtC,MAAC,KAADC,UAAA,UAAAqC,IAU/B,OAV+BA,GAAAtD,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAsD,EAAiC3D,GAAO,IAAAwC,EAAA,OAAAnC,IAAAA,MAAA,SAAAuD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,UAAAQ,OAAS1C,EAAO,qBAAA0C,OAAoBP,IAC/C,KAAD,EAFa,OAARK,EAAQoB,EAAA/C,KAAA+C,EAAAjB,OAAA,SAGPH,EAASjC,MAAI,OAAAqD,EAAAlD,KAAA,EAAAkD,EAAAhB,GAAAgB,EAAA,SAEpBf,QAAQC,MAAM,qCAAAc,EAAAhB,IACd,yBAAAgB,EAAAzC,OAAA,GAAAwC,EAAA,mBAEHvC,MAAA,KAAAC,UAAA,UAEcwC,EAAmBC,GAAA,OAAAC,EAAA3C,MAAC,KAADC,UAAA,UAAA0C,IAgBjC,OAhBiCA,GAAA3D,EAAAA,EAAAA,GAAAC,IAAAA,MAAlC,SAAA2D,EAAmCC,GAAM,IAAAzB,EAAA0B,EAAA,OAAA7D,IAAAA,MAAA,SAAA8D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAzD,KAAA,EAAAyD,EAAAxD,KAAA,EAEd8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,gCAAAQ,OAA+BP,EAAO,KAAAO,OAAIN,EAAK,KAAAM,OAAIL,EAAK,UAAAK,OAASuB,IAC5E,KAAD,EAFa,OAARzB,EAAQ2B,EAAAtD,KAAAsD,EAAAxB,OAAA,SAGPH,EAASjC,MAAI,OAAA4D,EAAAzD,KAAA,EAAAyD,EAAAvB,GAAAuB,EAAA,SAEpBtB,QAAQC,MAAM,qCAAAqB,EAAAvB,IACGwB,SAASC,cAAc,kBAC/BC,UAAY,8BACCF,SAASC,cAAc,eAC/BC,UAAY,GAEN,QADdJ,EAAcE,SAASC,cAAc,kBACjBH,EAAYK,SACtCC,OAAOC,SAAS,EAAG,GAAG,yBAAAN,EAAAhD,OAAA,GAAA6C,EAAA,mBAEzB5C,MAAA,KAAAC,UAAA,UAEcqD,EAAmBC,EAAAC,GAAA,OAAAC,EAAAzD,MAAC,KAADC,UAAA,UAAAwD,IAYjC,OAZiCA,GAAAzE,EAAAA,EAAAA,GAAAC,IAAAA,MAAlC,SAAAyE,EAAmCC,EAAad,GAAM,IAAAzB,EAAA,OAAAnC,IAAAA,MAAA,SAAA2E,GAAA,cAAAA,EAAAtE,KAAAsE,EAAArE,MAAA,cAAAqE,EAAAtE,KAAA,EAAAsE,EAAArE,KAAA,EAE3B8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BR,EAAQ,wBAAAQ,OAAuBqC,EAAW,aAAArC,OAAYP,EAAO,KAAAO,OAAIN,EAAK,KAAAM,OAAIL,EAAK,UAAAK,OAASuB,IAC3F,KAAD,EAFa,OAARzB,EAAQwC,EAAAnE,KAAAmE,EAAArC,OAAA,SAGPH,EAASjC,MAAI,OAAAyE,EAAAtE,KAAA,EAAAsE,EAAApC,GAAAoC,EAAA,SAEpBnC,QAAQC,MAAM,qCAAAkC,EAAApC,IACGwB,SAASC,cAAc,kBAC/BC,UAAY,8BACrBE,OAAOC,SAAS,EAAG,GAAG,yBAAAO,EAAA7D,OAAA,GAAA2D,EAAA,mBAEzB1D,MAAA,KAAAC,UAAA,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/TheMovieDBapi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Gallery = styled.main`\n  display: flex;\n  margin-top: 10px;\n  gap: 10px;\n  flex-wrap: wrap;\n  > div {\n    width: 180px;\n    display: flex;\n    flex-direction: column;\n    word-wrap: break-word;\n    padding: 0 5px;\n  }\n  > div img {\n    width: 100%;\n  }\n  > div span {\n    font-size: 18px;\n  }\n  > div i {\n    word-wrap: break-word;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'services/TheMovieDBapi';\nimport { useEffect, useState } from 'react';\nimport { Gallery } from './Cast.styled';\nimport Loader from 'components/Loader';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function prepareDetails() {\n      const data = await fetchMovieCredits(movieId);\n      let list = [...data.cast];\n      list.map(actor => {\n        if (actor.profile_path === null) {\n          // fallback image if there is no image for this actor\n          actor.profile_path =\n            // 'https://bbgres.com/wp-content/uploads/2016/11/dummy-profile-pic-e1573529329780-223x300.jpg';\n            'https://dummyimage.com/175x263/000/fff&text=no+photo';\n        } else {\n          actor.profile_path =\n            'https://image.tmdb.org/t/p/w500/' + actor.profile_path;\n        }\n        return actor;\n      });\n      setCredits(list);\n      setIsLoading(false);\n    }\n    if (!movieId) return;\n    setIsLoading(true);\n    prepareDetails();\n  }, [movieId]);\n\n  return (\n    <Gallery>\n      {isLoading && <Loader />}\n      {credits.length > 0 ? (\n        credits.map(({ profile_path, name, character, id }) => {\n          return (\n            <div key={id}>\n              <img src={profile_path} alt={name} />\n              <span>{name}</span>\n              <i>Character: {character}</i>\n            </div>\n          );\n        })\n      ) : (\n        <i>   Sorry! There are no infos about casting.</i>\n      )}\n    </Gallery>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst TMDB_URL = `https://api.themoviedb.org/3/`,\n  API_KEY = `cfa02d8137a4395c6860edb4676198c3`,\n  PART1 = 'include_adult=false',\n  PART2 = 'language=en-US';\n\nasync function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}/credits?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n  }\n}\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMoviesGenres() {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/genre/movie/list?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchTrendingMovies(pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/trending/movie/day?api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    const moviesDivElem = document.querySelector('.movies-div');\n    moviesDivElem.innerHTML = '';\n    const btnsDivElem = document.querySelector('.buttons-div');\n    if (btnsDivElem !== null) btnsDivElem.remove();\n    window.scrollTo(0, 0);\n  }\n}\n\nasync function fetchSearchedMovies(searchQuery, pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    window.scrollTo(0, 0);\n  }\n}\n\nexport {\n  fetchMovieCredits,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchMoviesGenres,\n  fetchTrendingMovies,\n  fetchSearchedMovies,\n};\n"],"names":["Gallery","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","useEffect","_prepareDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","list","_context","prev","next","fetchMovieCredits","sent","_toConsumableArray","cast","map","actor","profile_path","stop","apply","arguments","prepareDetails","_jsxs","children","_jsx","Loader","length","_ref","name","character","id","src","alt","TMDB_URL","API_KEY","PART1","PART2","_x","_fetchMovieCredits","response","axios","concat","abrupt","t0","console","error","fetchMovieDetails","_x2","_fetchMovieDetails","_callee2","_context2","fetchMoviesGenres","_fetchMoviesGenres","_callee3","_context3","fetchMovieReviews","_x3","_fetchMovieReviews","_callee4","_context4","fetchTrendingMovies","_x4","_fetchTrendingMovies","_callee5","pageNo","btnsDivElem","_context5","document","querySelector","innerHTML","remove","window","scrollTo","fetchSearchedMovies","_x5","_x6","_fetchSearchedMovies","_callee6","searchQuery","_context6"],"sourceRoot":""}