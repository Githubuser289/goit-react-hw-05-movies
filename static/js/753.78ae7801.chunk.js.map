{"version":3,"file":"static/js/753.78ae7801.chunk.js","mappings":"oPAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mOAelBC,EAAW,SAAHC,GAA0B,IAApBC,EAAED,EAAFC,GAAIC,EAAQF,EAARE,SAC7B,OACEC,EAAAA,EAAAA,MAACT,EAAU,CAACO,GAAIA,EAAGC,SAAA,CAAC,eAEjBA,IAGP,E,2BCxBaE,EAAUT,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wFASpBO,EAAYV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sLAatBS,EAAUZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0K,SCyCjC,EA1DqB,WAAO,IAADW,EACzBC,GAAkCC,EAAAA,EAAAA,UAAS,CACzCC,eAAgB,GAChBC,SAAU,GACVC,WAAY,EACZC,OAAQ,KACRC,GAAAC,EAAAA,EAAAA,GAAAP,EAAA,GALKQ,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAM9BI,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,SAAqB,QAAdpB,EAAAiB,EAASI,aAAK,IAAArB,OAAA,EAAdA,EAAgBsB,OAAQ,KAuBpD,OArBAC,EAAAA,EAAAA,YAAU,WACqB,SAAAC,IAc5B,OAd4BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA7B,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACqBC,EAAAA,EAAAA,IAAkBjB,GAAS,KAAD,GAAvCa,EAAIC,EAAAI,MACLC,MAAQN,EAAKtB,OAAO6B,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAI,IAAEC,KAAK,MACtB,OAArBV,EAAKW,YACPX,EAAKW,YACH,uDAEFX,EAAKW,YACH,sCAAwCX,EAAKW,YAEjD7B,EAAakB,GAGbd,GAAa,GAAO,wBAAAe,EAAAW,OAAA,GAAAb,EAAA,MACrBc,MAAA,KAAAC,UAAA,CACI3B,IACLD,GAAa,GAjBE,WACcU,EAAAiB,MAAC,KAADC,UAAA,CAiB7BC,GACF,GAAG,CAAC5B,KAGFrB,EAAAA,EAAAA,MAACC,EAAO,CAAAF,SAAA,EACNmD,EAAAA,EAAAA,KAACtD,EAAQ,CAACE,GAAI2B,EAAa0B,QAAQpD,SAAC,YACnCoB,IAAa+B,EAAAA,EAAAA,KAACE,EAAAA,EAAM,KACrBpD,EAAAA,EAAAA,MAACE,EAAS,CAAAH,SAAA,EACRmD,EAAAA,EAAAA,KAAA,OAAKG,IAAKtC,EAAU8B,YAAaS,IAAKvC,EAAUN,kBAChDT,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEmD,EAAAA,EAAAA,KAAA,MAAAnD,SAAKgB,EAAUN,kBACfT,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,eAAawD,KAAKC,MAA+B,GAAzBzC,EAAU0C,cAAqB,QAC1DP,EAAAA,EAAAA,KAAA,MAAAnD,SAAI,cACJmD,EAAAA,EAAAA,KAAA,KAAAnD,SAAIgB,EAAUL,YACdwC,EAAAA,EAAAA,KAAA,MAAAnD,SAAI,YACJmD,EAAAA,EAAAA,KAAA,KAAAnD,SAAIgB,EAAUyB,eAGlBU,EAAAA,EAAAA,KAAA,MAAAnD,SAAI,2BACJC,EAAAA,EAAAA,MAACI,EAAO,CAAAL,SAAA,EACNmD,EAAAA,EAAAA,KAACzD,EAAAA,GAAI,CAACK,GAAG,OAAMC,SAAC,UAChBmD,EAAAA,EAAAA,KAACzD,EAAAA,GAAI,CAACK,GAAG,UAASC,SAAC,gBAErBmD,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,MAGb,C,uNC9DMC,EAAQ,gCACZC,EAAO,mCACPC,EAAQ,sBACRC,EAAQ,iBAAiB,SAEZC,EAAiBC,GAAA,OAAAC,EAAAlB,MAAC,KAADC,UAAA,UAAAiB,IAU/B,OAV+BA,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAC,EAAiCZ,GAAO,IAAA6C,EAAA,OAAAlC,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,WAAAS,OAAU/C,EAAO,qBAAA+C,OAAoBR,EAAO,KAAAQ,OAAIN,IAC3D,KAAD,EAFa,OAARI,EAAQ/B,EAAAI,KAAAJ,EAAAkC,OAAA,SAGPH,EAAShC,MAAI,OAAAC,EAAAC,KAAA,EAAAD,EAAAmC,GAAAnC,EAAA,SAEpBoC,QAAQC,MAAM,qCAAArC,EAAAmC,IACd,yBAAAnC,EAAAW,OAAA,GAAAb,EAAA,mBAEHc,MAAA,KAAAC,UAAA,UAEcV,EAAiBmC,GAAA,OAAAC,EAAA3B,MAAC,KAADC,UAAA,UAAA0B,IAU/B,OAV+BA,GAAA3C,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAA2C,EAAiCtD,GAAO,IAAA6C,EAAA,OAAAlC,IAAAA,MAAA,SAAA4C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAxC,KAAA,EAAAwC,EAAAvC,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,WAAAS,OAAU/C,EAAO,aAAA+C,OAAYR,IACxC,KAAD,EAFa,OAARM,EAAQU,EAAArC,KAAAqC,EAAAP,OAAA,SAGPH,EAAShC,MAAI,OAAA0C,EAAAxC,KAAA,EAAAwC,EAAAN,GAAAM,EAAA,SAEpBL,QAAQC,MAAM,qCAAAI,EAAAN,IACd,yBAAAM,EAAA9B,OAAA,GAAA6B,EAAA,mBAEH5B,MAAA,KAAAC,UAAA,UAEc6B,IAAiB,OAAAC,EAAA/B,MAAC,KAADC,UAAA,UAAA8B,IAU/B,OAV+BA,GAAA/C,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAA+C,IAAA,IAAAb,EAAA,OAAAlC,IAAAA,MAAA,SAAAgD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAE2B8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,8BAAAS,OAA6BR,EAAO,KAAAQ,OAAIN,IACnD,KAAD,EAFa,OAARI,EAAQc,EAAAzC,KAAAyC,EAAAX,OAAA,SAGPH,EAAShC,MAAI,OAAA8C,EAAA5C,KAAA,EAAA4C,EAAAV,GAAAU,EAAA,SAEpBT,QAAQC,MAAM,qCAAAQ,EAAAV,IACd,yBAAAU,EAAAlC,OAAA,GAAAiC,EAAA,mBAEHhC,MAAA,KAAAC,UAAA,UAEciC,EAAiBC,GAAA,OAAAC,EAAApC,MAAC,KAADC,UAAA,UAAAmC,IAU/B,OAV+BA,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAhC,SAAAoD,EAAiC/D,GAAO,IAAA6C,EAAA,OAAAlC,IAAAA,MAAA,SAAAqD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAjD,KAAA,EAAAiD,EAAAhD,KAAA,EAEb8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,UAAAS,OAAS/C,EAAO,qBAAA+C,OAAoBR,IAC/C,KAAD,EAFa,OAARM,EAAQmB,EAAA9C,KAAA8C,EAAAhB,OAAA,SAGPH,EAAShC,MAAI,OAAAmD,EAAAjD,KAAA,EAAAiD,EAAAf,GAAAe,EAAA,SAEpBd,QAAQC,MAAM,qCAAAa,EAAAf,IACd,yBAAAe,EAAAvC,OAAA,GAAAsC,EAAA,mBAEHrC,MAAA,KAAAC,UAAA,UAEcsC,EAAmBC,GAAA,OAAAC,EAAAzC,MAAC,KAADC,UAAA,UAAAwC,IAgBjC,OAhBiCA,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAlC,SAAAyD,EAAmCC,GAAM,IAAAxB,EAAAyB,EAAA,OAAA3D,IAAAA,MAAA,SAAA4D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,cAAAuD,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,EAEd8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,gCAAAS,OAA+BR,EAAO,KAAAQ,OAAIP,EAAK,KAAAO,OAAIN,EAAK,UAAAM,OAASsB,IAC5E,KAAD,EAFa,OAARxB,EAAQ0B,EAAArD,KAAAqD,EAAAvB,OAAA,SAGPH,EAAShC,MAAI,OAAA0D,EAAAxD,KAAA,EAAAwD,EAAAtB,GAAAsB,EAAA,SAEpBrB,QAAQC,MAAM,qCAAAoB,EAAAtB,IACGuB,SAASC,cAAc,kBAC/BC,UAAY,8BACCF,SAASC,cAAc,eAC/BC,UAAY,GAEN,QADdJ,EAAcE,SAASC,cAAc,kBACjBH,EAAYK,SACtCC,OAAOC,SAAS,EAAG,GAAG,yBAAAN,EAAA9C,OAAA,GAAA2C,EAAA,mBAEzB1C,MAAA,KAAAC,UAAA,UAEcmD,EAAmBC,EAAAC,GAAA,OAAAC,EAAAvD,MAAC,KAADC,UAAA,UAAAsD,IAYjC,OAZiCA,GAAAvE,EAAAA,EAAAA,GAAAC,IAAAA,MAAlC,SAAAuE,EAAmCC,EAAad,GAAM,IAAAxB,EAAA,OAAAlC,IAAAA,MAAA,SAAAyE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAArE,KAAA,EAAAqE,EAAApE,KAAA,EAE3B8B,EAAAA,EAAAA,IAAU,GAADC,OAC3BT,EAAQ,wBAAAS,OAAuBoC,EAAW,aAAApC,OAAYR,EAAO,KAAAQ,OAAIP,EAAK,KAAAO,OAAIN,EAAK,UAAAM,OAASsB,IAC3F,KAAD,EAFa,OAARxB,EAAQuC,EAAAlE,KAAAkE,EAAApC,OAAA,SAGPH,EAAShC,MAAI,OAAAuE,EAAArE,KAAA,EAAAqE,EAAAnC,GAAAmC,EAAA,SAEpBlC,QAAQC,MAAM,qCAAAiC,EAAAnC,IACGuB,SAASC,cAAc,kBAC/BC,UAAY,8BACrBE,OAAOC,SAAS,EAAG,GAAG,yBAAAO,EAAA3D,OAAA,GAAAyD,EAAA,mBAEzBxD,MAAA,KAAAC,UAAA,C","sources":["components/BackLink.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/TheMovieDBapi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      ⬅️\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n  > a {\n    padding-top: 0px;\n  }\n  > h3 {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MovieData = styled.div`\n  display: flex;\n  gap: 20px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid darkgrey;\n  > img {\n    width: 250px;\n  }\n  > div h2 {\n    font-size: 1.7em;\n  }\n`;\n\nexport const InfoDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid darkgrey;\n  > a {\n    padding-left: 15px;\n  }\n`;\n","import { BackLink } from 'components/BackLink';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/TheMovieDBapi';\nimport { InfoDiv, MainDiv, MovieData } from './MovieDetails.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({\n    original_title: '',\n    overview: '',\n    popularity: 0,\n    genres: [],\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    async function prepareDetails() {\n      const data = await fetchMovieDetails(movieId);\n      data.genre = data.genres.map(m => m.name).join(', ');\n      if (data.poster_path === null) {\n        data.poster_path =\n          'https://dummyimage.com/500x750/000/fff&text=no+photo';\n      } else {\n        data.poster_path =\n          'https://www.themoviedb.org/t/p/w500' + data.poster_path;\n      }\n      setMovieData(data);\n      // genre = genres.map(m => m.name).join(', ');\n      // setFlag(true);\n      setIsLoading(false);\n    }\n    if (!movieId) return;\n    setIsLoading(true);\n    prepareDetails();\n  }, [movieId]);\n\n  return (\n    <MainDiv>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      {isLoading && <Loader />}\n      <MovieData>\n        <img src={movieData.poster_path} alt={movieData.original_title} />\n        <div>\n          <h2>{movieData.original_title}</h2>\n          <p>User score: {Math.round(movieData.vote_average * 10) + '%'}</p>\n          <h3>Overview</h3>\n          <p>{movieData.overview}</p>\n          <h3>Genres</h3>\n          <p>{movieData.genre}</p>\n        </div>\n      </MovieData>\n      <h3>Aditional information</h3>\n      <InfoDiv>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </InfoDiv>\n      <Outlet />\n    </MainDiv>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst TMDB_URL = `https://api.themoviedb.org/3/`,\n  API_KEY = `cfa02d8137a4395c6860edb4676198c3`,\n  PART1 = 'include_adult=false',\n  PART2 = 'language=en-US';\n\nasync function fetchMovieCredits(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}/credits?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMovieDetails(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/movie/${movieId}?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMoviesGenres() {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/genre/movie/list?api_key=${API_KEY}&${PART2}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchMovieReviews(movieId) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    // spanElem.innerHTML = 'Oops! Something went wrong!';\n  }\n}\n\nasync function fetchTrendingMovies(pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/trending/movie/day?api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    const moviesDivElem = document.querySelector('.movies-div');\n    moviesDivElem.innerHTML = '';\n    const btnsDivElem = document.querySelector('.buttons-div');\n    if (btnsDivElem !== null) btnsDivElem.remove();\n    window.scrollTo(0, 0);\n  }\n}\n\nasync function fetchSearchedMovies(searchQuery, pageNo) {\n  try {\n    const response = await axios.get(\n      `${TMDB_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}&${PART1}&${PART2}&page=${pageNo}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(`Oops! Something went wrong! Error:` + error);\n    const spanElem = document.querySelector('.error-message');\n    spanElem.innerHTML = 'Oops! Something went wrong!';\n    window.scrollTo(0, 0);\n  }\n}\n\nexport {\n  fetchMovieCredits,\n  fetchMovieDetails,\n  fetchMovieReviews,\n  fetchMoviesGenres,\n  fetchTrendingMovies,\n  fetchSearchedMovies,\n};\n"],"names":["StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","BackLink","_ref","to","children","_jsxs","MainDiv","MovieData","_templateObject2","InfoDiv","_templateObject3","_location$state","_useState","useState","original_title","overview","popularity","genres","_useState2","_slicedToArray","movieData","setMovieData","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","_prepareDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieDetails","sent","genre","map","m","name","join","poster_path","stop","apply","arguments","prepareDetails","_jsx","current","Loader","src","alt","Math","round","vote_average","Outlet","TMDB_URL","API_KEY","PART1","PART2","fetchMovieCredits","_x","_fetchMovieCredits","response","axios","concat","abrupt","t0","console","error","_x2","_fetchMovieDetails","_callee2","_context2","fetchMoviesGenres","_fetchMoviesGenres","_callee3","_context3","fetchMovieReviews","_x3","_fetchMovieReviews","_callee4","_context4","fetchTrendingMovies","_x4","_fetchTrendingMovies","_callee5","pageNo","btnsDivElem","_context5","document","querySelector","innerHTML","remove","window","scrollTo","fetchSearchedMovies","_x5","_x6","_fetchSearchedMovies","_callee6","searchQuery","_context6"],"sourceRoot":""}